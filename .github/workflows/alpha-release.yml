on:
  push:
    branches:
      - personal/ali-arsalan

name: Create Alpha Release

jobs:
  build:
    name: Create Alpha Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow --tags
      - name: Get Commit Message
        run: |
          msg=""
          fix=""
          build=""
          ci=""
          docs=""
          feat=""
          perf=""
          refactor=""
          style=""
          test=""
          for i in $(git log --format=%h ${{ github.event.before }}..${{ github.event.after }})
          do
            IFS=":" read -a arr <<< $(git log --format=%B -n 1 $i)
              if [ "${arr[0]}" == "fix" ]
                  then
                      fix+="  &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "feat" ]
                  then
                      feat+=" &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "ci" ]
                  then
                      ci+=" &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "docs" ]
                  then
                      docs+=" &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "build" ]
                  then
                      build+="  &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "perf" ]
                  then
                      perf+=" &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "refactor" ]
                  then
                      refactor+=" &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "style" ]
                  then
                      style+="  &#8226; $i - ${arr[1]}<br/>"
              fi
              if [ "${arr[0]}" == "test" ]
                  then
                      test+=" &#8226; $i - ${arr[1]}<br/>"
              fi
          done
          if [ ! -z "${fix}" ]
            then
              msg+="<h5>Bug Fixes</h5><br/>$fix"
          fi
          if [ ! -z "${feat}" ]
              then
              msg+="<h5>New Features</h5><br/>$feat"
          fi
          if [ ! -z "${ci}" ]
              then
              msg+="<h5>Continuous Integration</h5><br/>$ci"
          fi
          if [ ! -z "${docs}" ]
              then
              msg+="<h5>Documentation</h5><br/>$docs"
          fi
          if [ ! -z "${perf}" ]
              then
              msg+="<h5>Performance Enhancement</h5><br/>$perf"
          fi
          if [ ! -z "${refactor}" ]
              then
              msg+="<h5>Refactored</h5><br/>$refactor"
          fi
          if [ ! -z "${style}" ]
              then
              msg+="<h5>Changed Style</h5><br/>$style"
          fi
          if [ ! -z "${test}" ]
              then
              msg+="<h5>Added Tests</h5><br/>$test"
          fi
          echo ::set-env name=COMMIT_MESSAGE::"${msg}"
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Create Alpha Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}-alpha18
          release_name: V${{ steps.package-version.outputs.current-version}}-alpha
          body: ${{ env.COMMIT_MESSAGE }}
          draft: false
          prerelease: false
