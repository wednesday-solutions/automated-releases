on:
  push:
    branches:
      - master
      - develop
      - qa
      - personal/ali-arsalan

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Get Commit Message
        run: |
          arr=""
          while read line
          do
            hash = ${line:1:7}
            msg = ${line:8:}
            arr+= "- [$msg](https://github.com/${{ github.repository }}/commit/$hash)\n"
          done < "$(git log --format=%B%H ${{ github.event.before }}..${{ github.event.after }})"
          echo ::set-env name=COMMIT_MESSAGE::${arr}
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Create alpha Release
        if: github.ref == 'refs/heads/develop'
        id: create_alpha_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}-alpha
          release_name: V${{ steps.package-version.outputs.current-version}}-alpha
          body: ${{ env.COMMIT_MESSAGE }}
          draft: false
          prerelease: false
      - name: Create beta Release
        if: github.ref == 'refs/heads/qa'
        id: create_beta_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}-beta
          release_name: V${{ steps.package-version.outputs.current-version}}-beta
          body: ${{ env.COMMIT_MESSAGE }}
          draft: false
          prerelease: false
      - name: Create prod Release
        if: github.ref == 'refs/heads/master'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}
          release_name: V${{ steps.package-version.outputs.current-version}}
          body: ${{ env.COMMIT_MESSAGE }}

          draft: false
          prerelease: false
      - name: Create personal/ali Release
        if: github.ref == 'refs/heads/personal/ali-arsalan'
        id: create_personal_ali_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}-test5
          release_name: V${{ steps.package-version.outputs.current-version}}
          body: ${{ env.COMMIT_MESSAGE }}
          draft: false
          prerelease: false
